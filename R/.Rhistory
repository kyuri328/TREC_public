legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Counted Pedestrian Daily Volume by State: 2018-2023") +
theme_light()+
xlab("State") +
ylab("Pedestrian Volume")
# Prepare the text for the tooltip:
pop_bike <- paste(
"State: ", sf_bikevol$state, "<br/>",
"Segment: ", sf_bikevol$segment_na, "<br/>",
"Bike_Vol: ", round(sf_bikevol$vol_6ydaily_bike), sep="") %>%
lapply(htmltools::HTML)
pop_ped <- paste(
"State: ", sf_pedvol$state, "<br/>",
"Segment: ", sf_pedvol$segment_na, "<br/>",
"Ped_Vol: ", round(sf_pedvol$vol_6ydaily_ped), sep="") %>%
lapply(htmltools::HTML)
### MAP - DC & VA (zoom at DC Area)
# Creating Volume Map:DC&VA
m_volume_dcva <- leaflet() %>%
addTiles() %>%
setView( lng = -77.0369, lat = 38.9072, zoom = 12) %>%
addProviderTiles("Esri.WorldTopoMap")%>%
# Add 2 marker groups: Volume
addCircleMarkers(data=sf_pedvol, lng=~long , lat=~lat,
radius=~vol_6ydaily_ped/100,
fillColor="purple",
stroke = FALSE,
fillOpacity = 0.8,
group="Pedestrian Volume",
label = pop_ped,
labelOptions = labelOptions( style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px", direction = "auto")) %>%
addCircleMarkers(data=sf_bikevol, lng=~long , lat=~lat,
radius=~vol_6ydaily_bike/100,
fillColor="blue",
stroke = FALSE,
fillOpacity = 0.8,
group="Bike Volume",
label = pop_bike,
labelOptions = labelOptions( style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px", direction = "auto")) %>%
# Add the control widget
addLayersControl(overlayGroups = c("Bike Volume","Pedestrian Volume"),
options = layersControlOptions(collapsed = FALSE))
m_volume_dcva
# MAP - OR(zoom at Portland Metropolitan Area)
m_volume_or <- leaflet() %>%
addTiles() %>%
setView( lng = -122.676483, lat = 45.523064, zoom = 12) %>%
addProviderTiles("Esri.WorldTopoMap") %>%
# Add 1 marker: Volume
addCircleMarkers(data=sf_bikevol, lng=~long , lat=~lat,
radius=~vol_6ydaily_bike/30,
fillColor="blue",
stroke = FALSE,
fillOpacity = 0.8,
group="Bike Volume",
label = pop_bike,
labelOptions = labelOptions( style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px", direction = "auto"))%>%
# Add the control widget
addLayersControl(overlayGroups = c("Bike Volume"),
options = layersControlOptions(collapsed = FALSE))
m_volume_or
ggplot(data_segment_ave) +
aes(x=land_use, y=vol_6ydaily_bike, color = land_use) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Bike Volume by Land Use Type") +
theme_light()+
xlab("Land Use") +
ylab("Bike Volume")
ggplot(data_segment_ave) +
aes(x=land_use, y=vol_6ydaily_ped, color = land_use) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Pedestrian Volume by Land Use Type") +
theme_light()+
xlab("Land Use") +
ylab("Pedestrian Volume")
data_segment_ave_bike_facility <- data_segment_ave %>% filter(facility_type != "Bridge" & facility_type != "Intersection/Crossing")
ggplot(data_segment_ave_bike_facility) +
aes(x=facility_type, y=vol_6ydaily_bike, color = facility_type) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Bike Volume by Factility Type") +
theme_light()+
xlab("Factility Type") +
ylab("Bike Volume")
data_segment_ave_ped_facility <- data_segment_ave %>% filter(facility_type != "Bikelane" & facility_type != "Bridge" & facility_type != "Intersection/Crossing")
ggplot(data_segment_ave_ped_facility) +
aes(x=facility_type, y=vol_6ydaily_ped, color = facility_type) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Pedestrian Volume by Factility Type") +
theme_light()+
xlab("Factility Type") +
ylab("Pedestrian Volume")
### MAP Crash & Pop Density - DC & VA (zoom at DC Area)
# Clean the data object
sf_popdenhalf_dcva <- sf_popdenhalf_dcva %>%
mutate(popden_sqmi = ifelse(popden_sqm == 0, NA, round(popden_sqm/ 1000, 2)))
library(RColorBrewer)
mybins_dcva_popden <- c(0, 5, 10, 20, 30, 50, 100, Inf)
mypalette_dcva <- colorBin(
palette = "YlGn", domain = sf_popdenhalf_dcva$popden_sqmi,
na.color = "transparent", bins = mybins_dcva_popden
)
# Creating Crash & Pop Density Map:DC&VA
m_crash_dcva <- leaflet(sf_popdenhalf_dcva) %>%
addTiles() %>%
setView( lng = -77.0369, lat = 38.9072, zoom = 11) %>%
addProviderTiles("Esri.WorldTopoMap")%>%
# Add choropleth groups: Population Density
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.2, color = ~mypalette_dcva(popden_sqmi)) %>%
# Add the palette legend
leaflet::addLegend(
pal = mypalette_dcva, values = ~popden_sqmi,
title = "Pop. Density (K/sqmi)", position = "bottomleft",
opacity = 0.8)  %>%
# Add 2 marker groups: Crash
addCircleMarkers(data=sf_bikecrash_dcva,
radius=1.5,
fillColor="red",
stroke = FALSE,
fillOpacity = 0.8,
group="Bike Crash") %>%
addCircleMarkers(data=sf_pedcrash_dcva,
radius=1.5,
fillColor="orange",
stroke = FALSE,
fillOpacity = 0.8,
group="Pedestrian Crash") %>%
# Add the control widget
addLayersControl(overlayGroups = c("Bike Crash", "Pedestrian Crash"),
options = layersControlOptions(collapsed = FALSE))
m_crash_dcva
### MAP Crash & Pop Density - OR (zoom at DC Area)
# Clean the data object
sf_popdenhalf_or <- sf_popdenhalf_or %>%
mutate(popden_sqmi = round(popden/1000, 2))
mybins_or_popden <- c(0, 5, 10, 20, 30, 50, 100, Inf)
mypalette_or <- colorBin(
palette = "YlGn", domain = sf_popdenhalf_or$popden_sqmi,
na.color = "transparent", bins = mybins_or_popden
)
# MAP - OR(zoom at Portland Metropolitan Area)
m_crash_or <- leaflet(sf_popdenhalf_or) %>%
addTiles() %>%
setView( lng = -122.676483, lat = 45.523064, zoom = 11) %>%
addProviderTiles("Esri.WorldTopoMap") %>%
# Add choropleth groups: Population Density
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.2, color = ~mypalette_or(popden_sqmi)) %>%
# Add the palette legend
leaflet::addLegend(
pal = mypalette_or, values = ~popden_sqmi,
title = "Pop. Density (K/sqmi)", position = "bottomleft",
opacity = 0.8)  %>%
# Add 2 marker : Crash
addCircleMarkers(data=sf_bikecrash_or,
radius=1.5,
fillColor="red",
stroke = FALSE,
fillOpacity = 0.8,
group="Bike Crash") %>%
# Add the control widget
addLayersControl(overlayGroups = c("Bike Crash"),
options = layersControlOptions(collapsed = FALSE))
m_crash_or
ggplot(data_segment_ave) +
aes(x=land_use, y=bikecr_yrave, color = land_use) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Bike Crash by Land Use Type") +
theme_light()+
xlab("Land Use") +
ylab("Bike Crash")
ggplot(data_segment_ave) +
aes(x=facility_type, y=bikecr_yrave, color = facility_type) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Bike Crash by Factility Type") +
theme_light()+
xlab("Factility Type") +
ylab("Bike Crash")
ggplot(data_segment_ave) +
aes(x=paved, y=bikecr_yrave, color = paved) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Bike Crash on Paved/Unvpaved Road") +
theme_light()+
xlab("Paved OR Unvpaved") +
ylab("Bike Crash")
ggplot(data_segment_ave) +
aes(x=land_use, y=pedcr_yrave, color = land_use) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Pedestrian-involved Crash by Land Use Type") +
theme_light()+
xlab("Land Use") +
ylab("Pedestrian-involved Crash")
ggplot(data_segment_ave) +
aes(x=facility_type, y=pedcr_yrave, color = facility_type) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Pedestrian-involved Crash by Factility Type") +
theme_light()+
xlab("Factility Type") +
ylab("Pedestrian-involved Crash")
speed_year <- group_by(speed, segment_area_id, state, year)
speed_year <- summarise(speed_year,
speed_50th=mean(segment_50thmed),
speed_85th=mean(segment_85thmed),
speed_max=max(segment_max))
ggplot(speed_year) +
aes(x=state, y=speed_85th, color = state) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
ggtitle("Speed (85th) by State") +
theme_light()+
xlab("State") +
ylab("Speed 85th (mph)")
ggplot(data_state_year) +
aes(x=year, y=(bike_vol), color=state) +
geom_line(size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Bike Volume by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Year") + ylab("Bike Volume")+
scale_y_continuous(limits = c(0,500))
ggplot(data_state_year) +
aes(x=year, y=num_bikecrash_persegmentid, color=state) +
geom_line(size=1) +
geom_point(shape=21, color="black", fill="red", size=2.5) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Bike Crashes by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Year") + ylab("Bike Crashes (n/number of Permanent Count Location)")+
ylim(0,12)
# Custom Y-axis labels
data_ped_year <- data_state_year %>% filter(state != "OR")
ggplot(data_ped_year) +
aes(x=year, y=(ped_vol), color=state) +
geom_line(size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Average Pedestrian Volume by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Year") + ylab("Average Pedestrian Volume")+
scale_y_continuous(limits= c(0,1500))
ggplot(data_ped_year) +
aes(x=year, y=num_pedcrash_persegmentid, color=state) +
geom_line(size=1) +
geom_point(shape=21, color="black", fill="red", size=2.5) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Average Pedestrian Crashes by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Year") + ylab("Pedestrian Crashes (n/number of Permanent Count Location)")+
ylim(0,17)
speed_state <- group_by(speed, state, year)
speed_state <- summarise(speed_state,
speed_50th=mean(segment_50thmed),
speed_85th=mean(segment_85thmed),
speed_max=max(segment_max))
ggplot(speed_state) +
aes(x=year, color=state) +
geom_line(aes (y= speed_85th),size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Speed (50th) Yearly Trend by State") +
theme_light()+
xlab("Year") + ylab("Speed 85th (mph)") + ylim(0,35)
ggplot(speed_state) +
aes(x=year, color=state) +
geom_line(aes (y= speed_max),size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Maximum Speed Yearly Trend by State") +
theme_light()+
xlab("Year") + ylab("Maximum Speed (mph)") + ylim(50,95)
ggplot(data_state_month) +
aes(x=month, y=(bike_vol_ave_bysegment), color=state) +
geom_line(size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Average Bike Volume by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Month") + ylab("Bike Volume")+
scale_y_continuous(limits = c(0,600))+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name
) +theme(
axis.text.x = element_text(angle = 30, hjust = 1)
)
ggplot(data_state_month) +
aes(x=month, y=bike_crash_ave_bysegment, color=state) +
geom_line(size=1) +
geom_point(shape=21, color="black", fill="red", size=2.5) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Average Bike Crashes by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Month") + ylab("Bike Crashes (n/number of Permanent Count Location)")+
scale_y_continuous(limits = c(0,36))+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name
) +theme(
axis.text.x = element_text(angle = 30, hjust = 1)
)
data_ped_month <- data_state_month %>% filter(state != "OR")
ggplot(data_ped_month) +
aes(x=month, y=(ped_vol_ave_bysegment), color=state) +
geom_line(size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Average Ped Volume by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Month") + ylab("Ped Volume")+
scale_y_continuous(limits = c(0,1400))+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name
) +theme(
axis.text.x = element_text(angle = 30, hjust = 1)
)
ggplot(data_ped_month) +
aes(x=month, y=ped_crash_ave_bysegment, color=state) +
geom_line(size=1) +
geom_point(shape=21, color="black", fill="red", size=2.5) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Average Ped Crashes by Permanent Count Location: 2018-2023") +
theme_light()+
xlab("Month") + ylab("Ped Crashes (n/number of Permanent Count Location)")+
scale_y_continuous(limits = c(0,40))+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name
) +theme(
axis.text.x = element_text(angle = 30, hjust = 1)
)
ggplot(speed_state_month) +
aes(x=month, y=speed_50th, color=state) +
geom_line(size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Speed Monthly Trend by State") +
theme_light()+
xlab("Month") + ylab("Speed 50 percentile (mph)")+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name
) +theme(
axis.text.x = element_text(angle = 30, hjust = 1)
)
ggplot(speed_state_month) +
aes(x=month, y=speed_max, color=state) +
geom_line(size=1) +
scale_color_viridis(discrete = TRUE) +
ggtitle("Speed Monthly Trend by State") +
theme_light()+
xlab("Month") + ylab("Maximum Vehicle Speed (mph)")+
ylim(50,95)+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name
) +theme(
axis.text.x = element_text(angle = 30, hjust = 1)
)
ggplot(data_segment_ave, aes(x=ave_popden_sqmi, y=vol_6ydaily_bike, shape=state, color=state)) +
geom_point(size=3) +
ggtitle("Population Density & Bike Volume") +
xlab("Population Density (person/sqmi)") + ylab("Average Bike Volume (n/year)")+
theme_ipsum()+
geom_smooth(formula = y ~ x,method=lm, se=FALSE, fullrange=FALSE)
ggplot(data_segment_ave, aes(x=vol_6ydaily_bike, y=bikecr_yrave, shape=state, color=state)) +
geom_point(size=3) +
ggtitle("Bike Volume & Bike Crash") +
xlab("Average Bike Volume (n/number of collecting area/year)") + ylab("Average Bike Crashes (n/year)")+
theme_ipsum()+
geom_smooth(formula = y ~ x, method=lm, se=FALSE, fullrange=FALSE)
data_bike3d <- data_segment_ave %>% filter(!is.na(vol_6ydaily_bike))
bike3d <- plot_ly(data_bike3d, x = ~ave_popden_sqmi, y = ~vol_6ydaily_bike, z = ~bikecr_yrave,
marker = list(color = ~bikecr_yrave, colorscale = c('mistyrose', 'red4'), showscale = TRUE)) %>% add_markers()
bike3d <- bike3d %>% layout(scene = list(xaxis = list(title = 'Population Density'),
yaxis = list(title = 'Bike Volume'),
zaxis = list(title = 'Bike Crash')),
annotations = list(
x = 1.13,
y = 1.05,
text = 'Bike Crash number/Collecting Spot/Year',
xref = 'paper',
yref = 'paper',
showarrow = FALSE
))
bike3d
data_ped <- data_segment_ave %>% filter(state !='OR')
ggplot(data_ped, aes(x=ave_popden_sqmi, y=vol_6ydaily_ped, shape=state, color=state)) +
geom_point(size=3) +
ggtitle("Population Density & Pedestrian Volume") +
xlab("Population Density (person/sqmi)") + ylab("Average Pedestrian Volume (n/year)")+
theme_ipsum()+
geom_smooth(formula = y ~ x,method=lm, se=FALSE, fullrange=FALSE)
ggplot(data_ped, aes(x=vol_6ydaily_ped, y=pedcr_yrave, shape=state, color=state)) +
geom_point(size=3) +
ggtitle("Pedestrian Volume & Pedestrian Crash") +
xlab("Average Pedestrian Volume (n/number of collecting area/year)") + ylab("Average Pedestrian Crashes (n/year)")+
theme_ipsum()+
geom_smooth(formula = y ~ x,method=lm, se=FALSE, fullrange=FALSE)
data_ped3d <- data_ped_nooutlier %>% filter(!is.na(vol_6ydaily_ped))
data_ped <- data_segment_ave %>% filter(state !='OR')
ggplot(data_ped, aes(x=ave_popden_sqmi, y=vol_6ydaily_ped, shape=state, color=state)) +
geom_point(size=3) +
ggtitle("Population Density & Pedestrian Volume") +
xlab("Population Density (person/sqmi)") + ylab("Average Pedestrian Volume (n/year)")+
theme_ipsum()+
geom_smooth(formula = y ~ x,method=lm, se=FALSE, fullrange=FALSE)
ggplot(data_ped, aes(x=vol_6ydaily_ped, y=pedcr_yrave, shape=state, color=state)) +
geom_point(size=3) +
ggtitle("Pedestrian Volume & Pedestrian Crash") +
xlab("Average Pedestrian Volume (n/number of collecting area/year)") + ylab("Average Pedestrian Crashes (n/year)")+
theme_ipsum()+
geom_smooth(formula = y ~ x,method=lm, se=FALSE, fullrange=FALSE)
data_ped3d <- data_ped %>% filter(!is.na(vol_6ydaily_ped))
ped3d <- plot_ly(data_ped3d, x = ~ave_popden_sqmi, y = ~vol_6ydaily_ped, z = ~pedcr_yrave,
marker = list(color = ~pedcr_yrave, colorscale = c('mistyrose', 'red4'), showscale = TRUE)) %>% add_markers()
ped3d <- ped3d %>% layout(scene = list(xaxis = list(title = 'Population Density'),
yaxis = list(title = 'Pedestrian Volume'),
zaxis = list(title = 'Pedestrian Crash')),
annotations = list(
x = 1.13,
y = 1.05,
text = 'Pedestrian Crash number/Collecting Spot/Year',
xref = 'paper',
yref = 'paper',
showarrow = FALSE
))
ped3d
pedcrah_facility <- data_segment_ave %>% filter(facility_type != "Bridge" & facility_type != "Intersection/Crossing")
ggplot(data_segment_ave) +
aes(x=facility_type, y=pedcr_yrave, color = facility_type) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Pedestrian-involved Crash by Factility Type") +
theme_light()+
xlab("Factility Type") +
ylab("Pedestrian-involved Crash")
pedcrah_facility <- data_segment_ave %>% filter(facility_type != "Bridge" & facility_type != "Intersection/Crossing")
ggplot(pedcrah_facility) +
aes(x=facility_type, y=pedcr_yrave, color = facility_type) +
geom_boxplot() +
scale_fill_viridis(discrete = TRUE, alpha=0.7, option="A") +
theme(
legend.position="none",
plot.title = element_text(size=11)
) +
scale_x_discrete(guide = guide_axis(n.dodge=2))+
ggtitle("Pedestrian-involved Crash by Factility Type") +
theme_light()+
xlab("Factility Type") +
ylab("Pedestrian-involved Crash")
